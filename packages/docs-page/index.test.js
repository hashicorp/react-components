import React from 'react'
import { render } from '@testing-library/react'
import '@testing-library/jest-dom/extend-expect'
import DocsPage from './'

// TODO: this test needs to be rewritten. we should be testing:
// - passes `head` prop to `HashiHead`
// - passes `sidenav` and `product` props to `DocsSidenav`
// - passes `children` and `product` to `Content`
// - if there's a resourceURL, displays "edit this page" witn accurate URL
// - if there are one or more `h2` in the children content, displays "jump to section" with correct headlines

describe('<DocsPage />', () => {
  const templateHTML = '<template></template>'
  const sidebarHTML =
    '<div id="sidebar" role="complementary"><div class="nav docs-nav"><div class="g-docs-sidenav theme-nomad" data-testid="root"><div class="toggle" data-testid="mobile-menu"><span><svg width="20" height="20" fill="none" viewBox="0 0 20 20"><path fill="black" fill-rule="evenodd" d="M3.08268 14.4112C3.00768 14.3362 2.91602 14.2695 2.81602 14.2278C2.66602 14.1695 2.49935 14.1528 2.33268 14.1862C2.28268 14.1945 2.22435 14.2112 2.17435 14.2278C2.12435 14.2528 2.08268 14.2778 2.03268 14.3112C1.99018 14.3362 1.94935 14.3695 1.90768 14.4112C1.83268 14.4862 1.77435 14.5778 1.72435 14.6778C1.68268 14.7862 1.66602 14.8862 1.66602 15.0028C1.66602 15.0528 1.66602 15.1112 1.68268 15.1612C1.69102 15.2195 1.70768 15.2695 1.72435 15.3195C1.74852 15.3695 1.77435 15.4195 1.80768 15.4612C1.83268 15.5112 1.87435 15.5528 1.90768 15.5862C1.94935 15.6278 1.99018 15.6612 2.03268 15.6945C2.08268 15.7195 2.12435 15.7528 2.17435 15.7695C2.22435 15.7862 2.28268 15.8028 2.33268 15.8195C2.39102 15.8278 2.44018 15.8362 2.49935 15.8362C2.60768 15.8362 2.71602 15.8112 2.81602 15.7695C2.91602 15.7278 3.00768 15.6695 3.08268 15.5862C3.12435 15.5528 3.15768 15.5112 3.19102 15.4612C3.21602 15.4195 3.24935 15.3695 3.26602 15.3195C3.29102 15.2695 3.30768 15.2195 3.31602 15.1612C3.32435 15.1112 3.33268 15.0528 3.33268 15.0028C3.33268 14.8862 3.30768 14.7862 3.26602 14.6778C3.22435 14.5778 3.16602 14.4862 3.08268 14.4112ZM3.08268 9.41118C3.00768 9.33618 2.91602 9.26951 2.81602 9.22785C2.66602 9.16951 2.49935 9.15284 2.33268 9.18618C2.28268 9.19451 2.22435 9.21118 2.17435 9.22785C2.12435 9.25284 2.08268 9.27784 2.03268 9.31118C1.99018 9.33618 1.94935 9.36951 1.90768 9.41118C1.74852 9.56951 1.66602 9.77784 1.66602 10.0028C1.66602 10.1112 1.68268 10.2195 1.72435 10.3195C1.77435 10.4195 1.83268 10.5112 1.90768 10.5862C1.94935 10.6278 1.99018 10.6612 2.03268 10.6945C2.08268 10.7195 2.12435 10.7445 2.17435 10.7695C2.22435 10.7862 2.28268 10.8028 2.33268 10.8195C2.39102 10.8278 2.44018 10.8362 2.49935 10.8362C2.60768 10.8362 2.71602 10.8112 2.81602 10.7695C2.91602 10.7278 3.00768 10.6695 3.08268 10.5862C3.16602 10.5112 3.22435 10.4195 3.26602 10.3195C3.30768 10.2195 3.33268 10.1112 3.33268 10.0028C3.33268 9.88618 3.30768 9.78618 3.26602 9.67785C3.22435 9.57785 3.16602 9.48618 3.08268 9.41118ZM3.08268 4.41128C3.00768 4.33628 2.91602 4.26961 2.81602 4.22795C2.66602 4.16128 2.49935 4.15295 2.33268 4.18628C2.28268 4.19461 2.22435 4.21128 2.17435 4.22795C2.12435 4.25295 2.08268 4.27795 2.03268 4.31128C1.99018 4.33628 1.94935 4.36961 1.90768 4.41128C1.74852 4.56961 1.66602 4.78628 1.66602 5.00295C1.66602 5.11128 1.68268 5.21961 1.72435 5.31961C1.77435 5.41961 1.83268 5.51128 1.90768 5.58628C1.94935 5.62795 1.99018 5.66128 2.03268 5.69461C2.08268 5.71961 2.12435 5.74461 2.17435 5.76961C2.22435 5.78628 2.28268 5.80295 2.33268 5.81961C2.39102 5.82795 2.44018 5.83628 2.49935 5.83628C2.60768 5.83628 2.71602 5.81128 2.81602 5.76961C2.91602 5.72795 3.00768 5.66961 3.08268 5.58628C3.16602 5.51128 3.22435 5.41961 3.26602 5.31961C3.30768 5.21961 3.33268 5.11128 3.33268 5.00295C3.33268 4.89461 3.30768 4.78628 3.26602 4.67795C3.22435 4.57795 3.16602 4.48628 3.08268 4.41128ZM17.4967 14.167H6.66341C6.20258 14.167 5.83008 14.5395 5.83008 15.0003C5.83008 15.4603 6.20258 15.8337 6.66341 15.8337H17.4967C17.9576 15.8337 18.3301 15.4603 18.3301 15.0003C18.3301 14.5395 17.9576 14.167 17.4967 14.167ZM17.4967 9.16699H6.66341C6.20258 9.16699 5.83008 9.53949 5.83008 10.0003C5.83008 10.4603 6.20258 10.8337 6.66341 10.8337H17.4967C17.9576 10.8337 18.3301 10.4603 18.3301 10.0003C18.3301 9.53949 17.9576 9.16699 17.4967 9.16699ZM18.3301 5.00033C18.3301 5.46033 17.9576 5.83366 17.4967 5.83366H6.66341C6.20258 5.83366 5.83008 5.46033 5.83008 5.00033C5.83008 4.53949 6.20258 4.16699 6.66341 4.16699H17.4967C17.9576 4.16699 18.3301 4.53949 18.3301 5.00033Z" clip-rule="evenodd"></path></svg> Documentation Menu</span></div><ul class="nav docs-nav"><div class="mobile-close">Ã—</div><input class="filter" placeholder="Filter..." value=""></ul></div></div></div>'
  const innerHTML =
    '<div id="inner" role="main"><article class="g-content g-type-long-body nomad"></article></div>'
  const editThisPageHTML =
    '<div id="edit-this-page" class="g-container"><a href="https://github.com/hashicorp/nomad/blob/master/website/pages/api-docs/json-jobs.mdx"><div data-testid="root"><svg width="23" height="22" xmlns="http://www.w3.org/2000/svg"><path d="M11.608.342C5.535.342.61 5.162.61 11.108c0 4.757 3.152 8.792 7.523 10.215.55.1.751-.233.751-.518 0-.256-.01-.933-.015-1.831-3.06.65-3.705-1.444-3.705-1.444-.5-1.243-1.222-1.574-1.222-1.574-.998-.668.076-.655.076-.655 1.104.076 1.685 1.11 1.685 1.11.981 1.645 2.575 1.17 3.201.894.1-.695.385-1.17.699-1.439-2.443-.271-5.011-1.195-5.011-5.32 0-1.176.429-2.137 1.132-2.89-.113-.272-.49-1.367.108-2.849 0 0 .924-.289 3.025 1.104.877-.24 1.819-.358 2.754-.363.934.005 1.875.124 2.754.363 2.1-1.393 3.022-1.104 3.022-1.104.6 1.482.222 2.577.11 2.85.705.752 1.13 1.713 1.13 2.888 0 4.136-2.572 5.046-5.022 5.313.394.332.746.99.746 1.994 0 1.438-.013 2.6-.013 2.953 0 .288.198.623.756.518 4.368-1.427 7.516-5.46 7.516-10.215 0-5.946-4.925-10.766-11-10.766" fill="#161514" fill-rule="evenodd"></path></svg></div><span>Edit this page</span></a></div>'

  it('should render and display <DocsPage />', () => {
    const { container } = render(
      <DocsPage
        head={{
          is: 'template',
          description:
            'Jobs can also be specified via the HTTP API using a JSON format. This guide discusses the job specification in JSON format.',
          title: 'JSON Job Specification - HTTP API',
          siteName: 'Nomad by HashiCorp',
        }}
        product="nomad"
        resourceURL="https://github.com/hashicorp/nomad/blob/master/website/pages/api-docs/json-jobs.mdx"
        sidenav={{
          Link: 'span',
          category: 'intro',
          currentPage: '/api-docs/json-jobs',
          data: [],
          order: [],
        }}
      />
    )

    expect(container.innerHTML).toBe(
      [
        '<div id="p-docs">',
        [
          templateHTML,
          '<div class="content-wrap g-container">',
          [sidebarHTML, innerHTML],
          '</div>',
          editThisPageHTML,
        ],
        '</div>',
      ]
        .flat(Infinity)
        .join('')
    )
  })
})
